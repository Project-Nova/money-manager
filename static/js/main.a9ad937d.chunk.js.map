{"version":3,"sources":["components/Icon-button/Add/Add.jsx","components/Icon-button/Avatar/Avatar.jsx","components/Icon-button/LogoAvatar/LogoAvatar.jsx","components/header/Header.jsx","components/Transaction/TransactionItem.jsx","components/Transaction/TransactionHeader/TransactionHeader.jsx","components/Paper/PaperCard.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","IconButtons","classes","className","IconButton","color","aria-label","Badge","badgeContent","display","marginRight","square","palette","getContrastText","deepOrange","backgroundColor","rounded","green","VariantAvatars","Avatar","variant","src","cursor","LogoAvatar","Header","Component","width","background","paper","fontFamily","TransactionItem","React","useState","List","ListItem","ListItemAvatar","ListItemText","primary","secondary","ListItemSecondaryAction","borderBottom","padding","TransactionHeader","PaperCard","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a9ad937d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport './Add.css'\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function IconButtons() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            <IconButton color=\"secondary\" aria-label=\"add an alarm\">\r\n                <Badge badgeContent={4} color=\"primary\">\r\n                    <NotificationsNoneIcon />\r\n                </Badge>\r\n            </IconButton>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { deepOrange, green } from '@material-ui/core/colors';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        '& > *': {\r\n            margin: theme.spacing(1.5),\r\n            marginRight: \"25px\"\r\n        },\r\n    },\r\n    square: {\r\n        color: theme.palette.getContrastText(deepOrange[500]),\r\n        backgroundColor: deepOrange[500],\r\n        marginRight: \"25px\"\r\n    },\r\n    rounded: {\r\n        color: '#fff',\r\n        backgroundColor: green[500],\r\n    },\r\n}));\r\n\r\nexport default function VariantAvatars() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Avatar variant=\"square\" src=\"https://avatars2.githubusercontent.com/u/31583525?s=460&v=4\" className={classes.square}></Avatar>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { deepOrange, green } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        '& > *': {\r\n            margin: theme.spacing(1.5),\r\n        },\r\n    },\r\n    square: {\r\n        color: theme.palette.getContrastText(deepOrange[500]),\r\n        backgroundColor: deepOrange[500],\r\n    },\r\n    rounded: {\r\n        color: '#fff',\r\n        backgroundColor: green[500],\r\n        cursor: \"pointer\"\r\n    },\r\n}));\r\n\r\nexport default function LogoAvatar() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Avatar variant=\"rounded\" src=\"https://image.flaticon.com/icons/png/512/1413/1413310.png\" className={classes.square}></Avatar>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from 'react'\r\nimport './Header.css'\r\nimport IconButtons from '../Icon-button/Add/Add';\r\nimport VariantAvatars from '../Icon-button/Avatar/Avatar';\r\nimport LogoAvatar from '../Icon-button/LogoAvatar/LogoAvatar';\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"header\">\r\n                    <div className=\"flex\">\r\n                        <LogoAvatar />\r\n                    </div>\r\n                    <div className=\"flex flex-end\">\r\n                        <IconButtons />\r\n                        <VariantAvatars />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\r\n\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\n\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nimport './TransactionItem.css'\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n        fontFamily: \"Roboto,sans-serif;\"\r\n    },\r\n}));\r\n\r\nexport default function TransactionItem() {\r\n    const classes = useStyles();\r\n\r\n    const [checked, setChecked] = React.useState(['wifi']);\r\n\r\n    const handleToggle = value => () => {\r\n        const currentIndex = checked.indexOf(value);\r\n        const newChecked = [...checked];\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value);\r\n        } else {\r\n            newChecked.splice(currentIndex, 1);\r\n        }\r\n\r\n        setChecked(newChecked);\r\n    };\r\n\r\n    return (\r\n        <List className={classes.root}>\r\n            <ListItem className=\"list-item\">\r\n                <ListItemAvatar>\r\n                    <Avatar src=\"https://img.favpng.com/9/7/21/vector-graphics-clip-art-image-illustration-design-png-favpng-Zd7gD5LJ9ZNGLW9vjDXMGDEPH_t.jpg\">\r\n                    </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText primary=\"Photos\" secondary=\"Jan 9, 2014\" />\r\n                <ListItemSecondaryAction>\r\n                    <ListItemText primary=\"-₹ 2,300.00\" />\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n            <ListItem className=\"list-item\">\r\n                <ListItemAvatar>\r\n                    <Avatar>\r\n                        <WorkIcon />\r\n                    </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText primary=\"Work\" secondary=\"Jan 7, 2014\" />\r\n            </ListItem>\r\n            <ListItem className=\"list-item\">\r\n                <ListItemAvatar>\r\n                    <Avatar>\r\n                        <BeachAccessIcon />\r\n                    </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText primary=\"Vacation\" secondary=\"July 20, 2014\" />\r\n            </ListItem>\r\n        </List>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\r\n\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\n\r\n\r\n\r\nimport './TransactionHeader.css'\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n        fontFamily: \"Roboto,sans-serif;\",\r\n        borderBottom: \"1px solid rgba(0,0,0,.12)\",\r\n        padding: \"0\",\r\n    },\r\n}));\r\n\r\nexport default function TransactionHeader() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <List className={classes.root}>\r\n            <ListItem>\r\n                <ListItemAvatar>\r\n                    <span className=\"day\">05</span>\r\n                </ListItemAvatar>\r\n                <ListItemText primary=\"Thursday\" secondary=\"March, 2020\" />\r\n                <ListItemSecondaryAction>\r\n                    <ListItemText primary=\"-₹ 2,300.00\" />\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n\r\n        </List>\r\n    );\r\n}\r\n","import React, { Component } from 'react'\r\nimport './PaperCard.css'\r\nimport TransactionItem from '../Transaction/TransactionItem'\r\nimport TransactionHeader from '../Transaction/TransactionHeader/TransactionHeader'\r\nexport default class PaperCard extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"box shadow\">\r\n                <TransactionHeader />\r\n                <TransactionItem />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Header from './components/header/Header';\nimport PaperCard from './components/Paper/PaperCard';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <PaperCard />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}
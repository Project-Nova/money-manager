{"version":3,"sources":["components/Icon-button/Add/Add.jsx","components/Icon-button/Avatar/Avatar.jsx","components/Icon-button/LogoAvatar/LogoAvatar.jsx","components/Transaction/Components/DatePicker.jsx","components/Transaction/Components/WalletDialog.jsx","components/Transaction/Components/TextBox.jsx","components/Transaction/Components/DialogBox.jsx","components/header/Header.jsx","components/Transaction/TransactionItem.jsx","components/Transaction/TransactionHeader/TransactionHeader.jsx","components/Paper/PaperCard.jsx","components/Footer/Bottom/Bottom.jsx","components/Footer/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","color","IconButtons","classes","className","IconButton","aria-label","display","marginRight","square","palette","getContrastText","deepOrange","backgroundColor","rounded","green","VariantAvatars","Avatar","variant","src","cursor","LogoAvatar","MaterialUIPickers","useState","Date","selectedDate","handleDateChange","utils","DateFnsUtils","DateTimePicker","inputVariant","id","label","format","value","onChange","KeyboardButtonProps","emails","avatar","blue","SimpleDialog","props","onClose","selectedValue","open","handleListItemClick","Dialog","aria-labelledby","DialogTitle","List","map","email","ListItem","button","onClick","key","ListItemAvatar","ListItemText","primary","autoFocus","SimpleDialogDemo","React","setOpen","setSelectedValue","width","useStylesReddit","border","overflow","borderRadius","transition","transitions","create","focused","RedditTextField","TextField","InputProps","disableUnderline","TextFields","noValidate","autoComplete","defaultValue","e","triggerChildAlert","target","console","log","form","flexDirection","formControl","marginTop","minWidth","formControlLabel","MaxWidthDialog","fullWidth","maxWidth","handleClose","Fragment","Button","DialogContent","event","DialogActions","Header","Component","background","paper","fontFamily","TransactionItem","category","notes","price","image","item","secondary","ListItemSecondaryAction","borderBottom","padding","TransactionHeader","PaperCard","Botttom","setValue","BottomNavigation","newValue","BottomNavigationAction","icon","Footer","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2cd86e8e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport AddBoxOutlinedIcon from '@material-ui/icons/AddBoxOutlined';\r\nimport './Add.css'\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            color: \"white\"\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function IconButtons() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            <IconButton color=\"secondary\" aria-label=\"add an alarm\">\r\n                {/* <Badge badgeContent={4} color=\"white\"> */}\r\n                <AddBoxOutlinedIcon />\r\n                {/* </Badge> */}\r\n            </IconButton>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { deepOrange, green } from '@material-ui/core/colors';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        '& > *': {\r\n            margin: theme.spacing(1.5),\r\n            marginRight: \"25px\"\r\n        },\r\n    },\r\n    square: {\r\n        color: theme.palette.getContrastText(deepOrange[500]),\r\n        backgroundColor: deepOrange[500],\r\n        marginRight: \"25px\"\r\n    },\r\n    rounded: {\r\n        color: '#fff',\r\n        backgroundColor: green[500],\r\n    },\r\n}));\r\n\r\nexport default function VariantAvatars() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Avatar variant=\"square\" src=\"https://avatars2.githubusercontent.com/u/31583525?s=460&v=4\" className={classes.square}></Avatar>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { deepOrange, green } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        '& > *': {\r\n            margin: theme.spacing(1.5),\r\n        },\r\n    },\r\n    rounded: {\r\n        color: '#fff',\r\n        backgroundColor: green[500],\r\n        cursor: \"pointer\"\r\n    },\r\n}));\r\n\r\nexport default function LogoAvatar() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Avatar variant=\"rounded\" src=\"https://static.moneylover.me/img/icon/ic_category_all.png\" className={classes.square}></Avatar>\r\n            <div>\r\n                <div>Total</div>\r\n                <div>12500</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport DateFnsUtils from '@date-io/date-fns'; // choose your lib\r\nimport {\r\n    DatePicker,\r\n    TimePicker,\r\n    DateTimePicker,\r\n    MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\n\r\nexport default function MaterialUIPickers() {\r\n\r\n    const [selectedDate, handleDateChange] = useState(new Date());\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <DateTimePicker inputVariant=\"outlined\"\r\n                margin=\"normal\"\r\n                id=\"time-picker\"\r\n                label=\"Time picker\"\r\n                format=\"yyyy/MM/dd hh:mm a\"\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n                KeyboardButtonProps={{\r\n                    'aria-label': 'change time',\r\n                }}\r\n            />\r\n        </MuiPickersUtilsProvider>\r\n    );\r\n\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { blue } from '@material-ui/core/colors';\r\n\r\nconst emails = ['AXIS', 'HDFC'];\r\nconst useStyles = makeStyles({\r\n    avatar: {\r\n        backgroundColor: blue[100],\r\n        color: blue[600],\r\n    },\r\n});\r\n\r\nfunction SimpleDialog(props) {\r\n    const classes = useStyles();\r\n    const { onClose, selectedValue, open } = props;\r\n\r\n    const handleClose = () => {\r\n        onClose(selectedValue);\r\n    };\r\n\r\n    const handleListItemClick = value => {\r\n        onClose(value);\r\n    };\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\r\n            <List>\r\n                {emails.map(email => (\r\n                    <ListItem button onClick={() => handleListItemClick(email)} key={email}>\r\n                        <ListItemAvatar>\r\n                            <Avatar className={classes.avatar}>\r\n                                <PersonIcon />\r\n                            </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText primary={email} />\r\n                    </ListItem>\r\n                ))}\r\n\r\n                <ListItem autoFocus button onClick={() => handleListItemClick('addAccount')}>\r\n                    <ListItemAvatar>\r\n                        <Avatar>\r\n                            <AddIcon />\r\n                        </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary=\"Add account\" />\r\n                </ListItem>\r\n            </List>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nSimpleDialog.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    selectedValue: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default function SimpleDialogDemo() {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [selectedValue, setSelectedValue] = React.useState(emails[1]);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = value => {\r\n        setOpen(false);\r\n        setSelectedValue(value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {/* <Typography variant=\"subtitle1\">Selected: {selectedValue}</Typography>\r\n            <br />\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n                Open simple dialog\r\n      </Button> */}\r\n            <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport SimpleDialogDemo from './WalletDialog';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: 200,\r\n        },\r\n    },\r\n}));\r\n\r\nconst useStylesReddit = makeStyles(theme => ({\r\n    root: {\r\n        border: '1px solid #e2e2e1',\r\n        overflow: 'hidden',\r\n        borderRadius: 4,\r\n        backgroundColor: 'white',\r\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    },\r\n    focused: {},\r\n}));\r\n\r\nfunction RedditTextField(props) {\r\n    const classes = useStylesReddit();\r\n\r\n    return <TextField InputProps={{ classes, disableUnderline: true }} {...props} />;\r\n}\r\n\r\nexport default function TextFields(props) {\r\n    const classes = useStyles();\r\n\r\n    const handleClickOpen = (e) => {\r\n        props.triggerChildAlert(e.target.value)\r\n        console.log(\"1\")\r\n    }\r\n    return (\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <RedditTextField\r\n                label=\"Wallet\"\r\n                className={classes.margin}\r\n                defaultValue=\"Axis\"\r\n                variant=\"filled\"\r\n                id=\"reddit-input\"\r\n                onClick={handleClickOpen}\r\n            />\r\n        </form>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport MaterialUIPickers from './DatePicker';\r\nimport TextFields from './TextBox';\r\nimport './Dialog.css'\r\nimport SimpleDialogDemo from './WalletDialog';\r\nconst useStyles = makeStyles(theme => ({\r\n    form: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        margin: 'auto',\r\n        width: 'fit-content',\r\n    },\r\n    formControl: {\r\n        marginTop: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    formControlLabel: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport default function MaxWidthDialog(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [fullWidth, setFullWidth] = React.useState(true);\r\n    const [maxWidth, setMaxWidth] = React.useState('md');\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const triggerChildAlert = (event) => {\r\n        console.log(event)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <div className=\"transaction\">  <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\r\n                Add Transaction\r\n                        </Button></div>\r\n            <SimpleDialogDemo />\r\n            <Dialog\r\n                maxWidth={maxWidth}\r\n                fullWidth={fullWidth}\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"max-width-dialog-title\">\r\n\r\n                <DialogTitle id=\"max-width-dialog-title\">Add Transaction</DialogTitle>\r\n                <DialogContent>\r\n                    <MaterialUIPickers />\r\n                    <TextFields triggerChildAlert={triggerChildAlert} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">Save</Button>\r\n                    <Button onClick={handleClose} color=\"primary\">Cancel</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React, { Component } from 'react'\r\nimport './Header.css'\r\nimport IconButtons from '../Icon-button/Add/Add';\r\nimport VariantAvatars from '../Icon-button/Avatar/Avatar';\r\nimport LogoAvatar from '../Icon-button/LogoAvatar/LogoAvatar';\r\nimport MaxWidthDialog from '../Transaction/Components/DialogBox';\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"header\">\r\n                    <div className=\"flex\">\r\n                        <LogoAvatar />\r\n                    </div>\r\n                    <div className=\"flex flex-end\">\r\n                        <MaxWidthDialog />\r\n                        <div id=\"Add-Button\" ><IconButtons /></div>\r\n                        <VariantAvatars />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport './TransactionItem.css'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n        fontFamily: \"Roboto,sans-serif;\"\r\n    },\r\n}));\r\n\r\nexport default function TransactionItem() {\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n    const renderItems = () => {\r\n        const json = [{\r\n            category: \"Internet\",\r\n            notes: \"Internet Bill Paid on Axis Pay\",\r\n            price: \"-₹ 2,300.00\",\r\n            image: \"https://img.favpng.com/9/7/21/vector-graphics-clip-art-image-illustration-design-png-favpng-Zd7gD5LJ9ZNGLW9vjDXMGDEPH_t.jpg\"\r\n        },\r\n        {\r\n            category: \"Gas\",\r\n            notes: \"Gas Bill Paid on Axis Pay\",\r\n            price: \"-₹ 4,343.00\",\r\n            image: \"https://static.moneylover.me/img/icon/icon_139.png\"\r\n        },\r\n        {\r\n            category: \"Internet\",\r\n            notes: \"Internet Bill Paid on Axis Pay\",\r\n            price: \"-₹ 2,300.00\",\r\n            image: \"https://img.favpng.com/9/7/21/vector-graphics-clip-art-image-illustration-design-png-favpng-Zd7gD5LJ9ZNGLW9vjDXMGDEPH_t.jpg\"\r\n        },\r\n        {\r\n            category: \"Gas\",\r\n            notes: \"Gas Bill Paid on Axis Pay\",\r\n            price: \"-₹ 4,343.00\",\r\n            image: \"https://static.moneylover.me/img/icon/icon_139.png\"\r\n        }]\r\n\r\n        return (json.map(item =>\r\n\r\n\r\n            <ListItem className=\"list-item\">\r\n                <ListItemAvatar>\r\n                    <Avatar src={item.image}>\r\n                    </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText primary={item.category} secondary={item.notes} />\r\n                <ListItemSecondaryAction>\r\n                    <ListItemText primary={item.price} />\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n\r\n\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <List className={classes.root}>\r\n            {renderItems()}\r\n        </List>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\r\n\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\n\r\n\r\n\r\nimport './TransactionHeader.css'\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n        fontFamily: \"Roboto,sans-serif;\",\r\n        borderBottom: \"1px solid rgba(0,0,0,.12)\",\r\n        padding: \"0\",\r\n    },\r\n}));\r\n\r\nexport default function TransactionHeader() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <List className={classes.root}>\r\n            <ListItem>\r\n                <ListItemAvatar>\r\n                    <span className=\"day\">05</span>\r\n                </ListItemAvatar>\r\n                <ListItemText primary=\"Thursday\" secondary=\"March, 2020\" />\r\n                <ListItemSecondaryAction>\r\n                    <ListItemText primary=\"-₹ 2,300.00\" />\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n\r\n        </List>\r\n    );\r\n}\r\n","import React, { Component } from 'react'\r\nimport './PaperCard.css'\r\nimport TransactionItem from '../Transaction/TransactionItem'\r\nimport TransactionHeader from '../Transaction/TransactionHeader/TransactionHeader'\r\nimport MaterialUIPickers from '../Transaction/Components/DatePicker'\r\n\r\nimport MaxWidthDialog from '../Transaction/Components/DialogBox'\r\nexport default class PaperCard extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"box shadow\">\r\n                <TransactionHeader />\r\n                <TransactionItem />\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport NoteAddOutlinedIcon from '@material-ui/icons/NoteAddOutlined';\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 500,\r\n    },\r\n});\r\n\r\nexport default function Botttom() {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState('recents');\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <BottomNavigation value={value} onChange={handleChange} className={classes.root}>\r\n            <BottomNavigationAction label=\"Add New\" value=\"add\" icon={<NoteAddOutlinedIcon />} />\r\n            <BottomNavigationAction label=\"Trans..\" value=\"trans\" icon={<ListIcon />} />\r\n            <BottomNavigationAction label=\"Stats\" value=\"stats\" icon={<EqualizerIcon />} />\r\n            <BottomNavigationAction label=\"Accounts\" value=\"accounts\" icon={<AccountBalanceIcon />} />\r\n            <BottomNavigationAction label=\"Settings\" value=\"settings\" icon={<SettingsIcon />} />\r\n        </BottomNavigation>\r\n    );\r\n}","import React, { Component } from 'react'\r\nimport './Footer.css'\r\nimport IconButtons from '../Icon-button/Add/Add';\r\nimport VariantAvatars from '../Icon-button/Avatar/Avatar';\r\nimport LogoAvatar from '../Icon-button/LogoAvatar/LogoAvatar';\r\nimport Botttom from './Bottom/Bottom';\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"footer\">\r\n                    <Botttom />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Header from './components/header/Header';\nimport PaperCard from './components/Paper/PaperCard';\nimport Footer from './components/Footer/Footer';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <PaperCard />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}
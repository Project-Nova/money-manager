{"version":3,"sources":["components/Icon-button/Add/Add.jsx","components/Icon-button/Avatar/Avatar.jsx","components/Icon-button/LogoAvatar/LogoAvatar.jsx","components/header/Header.jsx","components/Transaction/TransactionItem.jsx","components/Transaction/TransactionHeader/TransactionHeader.jsx","components/Transaction/Components/DatePicker.jsx","components/Transaction/Components/TextBox.jsx","components/Transaction/Components/DialogBox.jsx","components/Paper/PaperCard.jsx","components/Footer/Bottom/Bottom.jsx","components/Footer/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","IconButtons","classes","className","IconButton","color","aria-label","Badge","badgeContent","display","marginRight","square","palette","getContrastText","deepOrange","backgroundColor","rounded","green","VariantAvatars","Avatar","variant","src","cursor","LogoAvatar","Header","Button","Component","width","background","paper","fontFamily","borderBottom","padding","MaterialUIPickers","useState","Date","selectedDate","handleDateChange","utils","DateFnsUtils","DateTimePicker","inputVariant","id","label","format","value","onChange","KeyboardButtonProps","useStylesReddit","border","overflow","borderRadius","transition","transitions","create","focused","RedditTextField","props","TextField","InputProps","disableUnderline","TextFields","noValidate","autoComplete","defaultValue","form","flexDirection","formControl","marginTop","minWidth","formControlLabel","MaxWidthDialog","React","open","setOpen","fullWidth","maxWidth","handleClose","Fragment","onClick","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","type","DialogActions","PaperCard","Botttom","setValue","BottomNavigation","event","newValue","BottomNavigationAction","icon","Footer","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3ccff7cf.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport './Add.css'\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function IconButtons() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            <IconButton color=\"secondary\" aria-label=\"add an alarm\">\r\n                <Badge badgeContent={4} color=\"primary\">\r\n                    <NotificationsNoneIcon />\r\n                </Badge>\r\n            </IconButton>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { deepOrange, green } from '@material-ui/core/colors';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        '& > *': {\r\n            margin: theme.spacing(1.5),\r\n            marginRight: \"25px\"\r\n        },\r\n    },\r\n    square: {\r\n        color: theme.palette.getContrastText(deepOrange[500]),\r\n        backgroundColor: deepOrange[500],\r\n        marginRight: \"25px\"\r\n    },\r\n    rounded: {\r\n        color: '#fff',\r\n        backgroundColor: green[500],\r\n    },\r\n}));\r\n\r\nexport default function VariantAvatars() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Avatar variant=\"square\" src=\"https://avatars2.githubusercontent.com/u/31583525?s=460&v=4\" className={classes.square}></Avatar>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { deepOrange, green } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        '& > *': {\r\n            margin: theme.spacing(1.5),\r\n        },\r\n    },\r\n    rounded: {\r\n        color: '#fff',\r\n        backgroundColor: green[500],\r\n        cursor: \"pointer\"\r\n    },\r\n}));\r\n\r\nexport default function LogoAvatar() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Avatar variant=\"rounded\" src=\"https://static.moneylover.me/img/icon/ic_category_all.png\" className={classes.square}></Avatar>\r\n            <div>\r\n                <div>Total</div>\r\n                <div>12500</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from 'react'\r\nimport './Header.css'\r\nimport IconButtons from '../Icon-button/Add/Add';\r\nimport VariantAvatars from '../Icon-button/Avatar/Avatar';\r\nimport LogoAvatar from '../Icon-button/LogoAvatar/LogoAvatar';\r\nimport Button from '@material-ui/core/Button';\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"header\">\r\n                    <div className=\"flex\">\r\n                        <LogoAvatar />\r\n                    </div>\r\n                    <div className=\"flex flex-end\">\r\n                        <div className=\"transaction\">  <Button variant=\"contained\" color=\"primary\">\r\n                            Add Transaction\r\n                        </Button></div>\r\n\r\n                        <IconButtons />\r\n                        <VariantAvatars />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport './TransactionItem.css'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n        fontFamily: \"Roboto,sans-serif;\"\r\n    },\r\n}));\r\n\r\nexport default function TransactionItem() {\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n    const renderItems = () => {\r\n        const json = [{\r\n            category: \"Internet\",\r\n            notes: \"Internet Bill Paid on Axis Pay\",\r\n            price: \"-₹ 2,300.00\",\r\n            image: \"https://img.favpng.com/9/7/21/vector-graphics-clip-art-image-illustration-design-png-favpng-Zd7gD5LJ9ZNGLW9vjDXMGDEPH_t.jpg\"\r\n        },\r\n        {\r\n            category: \"Gas\",\r\n            notes: \"Gas Bill Paid on Axis Pay\",\r\n            price: \"-₹ 4,343.00\",\r\n            image: \"https://static.moneylover.me/img/icon/icon_139.png\"\r\n        }]\r\n\r\n        return (json.map(item =>\r\n\r\n\r\n            <ListItem className=\"list-item\">\r\n                <ListItemAvatar>\r\n                    <Avatar src={item.image}>\r\n                    </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText primary={item.category} secondary={item.notes} />\r\n                <ListItemSecondaryAction>\r\n                    <ListItemText primary={item.price} />\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n\r\n\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <List className={classes.root}>\r\n            {renderItems()}\r\n        </List>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\r\n\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\n\r\n\r\n\r\nimport './TransactionHeader.css'\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n        fontFamily: \"Roboto,sans-serif;\",\r\n        borderBottom: \"1px solid rgba(0,0,0,.12)\",\r\n        padding: \"0\",\r\n    },\r\n}));\r\n\r\nexport default function TransactionHeader() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <List className={classes.root}>\r\n            <ListItem>\r\n                <ListItemAvatar>\r\n                    <span className=\"day\">05</span>\r\n                </ListItemAvatar>\r\n                <ListItemText primary=\"Thursday\" secondary=\"March, 2020\" />\r\n                <ListItemSecondaryAction>\r\n                    <ListItemText primary=\"-₹ 2,300.00\" />\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n\r\n        </List>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport DateFnsUtils from '@date-io/date-fns'; // choose your lib\r\nimport {\r\n    DatePicker,\r\n    TimePicker,\r\n    DateTimePicker,\r\n    MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\n\r\nexport default function MaterialUIPickers() {\r\n\r\n    const [selectedDate, handleDateChange] = useState(new Date());\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <DateTimePicker inputVariant=\"outlined\"\r\n                margin=\"normal\"\r\n                id=\"time-picker\"\r\n                label=\"Time picker\"\r\n                format=\"yyyy/MM/dd hh:mm a\"\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n                KeyboardButtonProps={{\r\n                    'aria-label': 'change time',\r\n                }}\r\n            />\r\n        </MuiPickersUtilsProvider>\r\n    );\r\n\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: 200,\r\n        },\r\n    },\r\n}));\r\n\r\nconst useStylesReddit = makeStyles(theme => ({\r\n    root: {\r\n        border: '1px solid #e2e2e1',\r\n        overflow: 'hidden',\r\n        borderRadius: 4,\r\n        backgroundColor: 'white',\r\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    },\r\n    focused: {},\r\n}));\r\n\r\nfunction RedditTextField(props) {\r\n    const classes = useStylesReddit();\r\n\r\n    return <TextField InputProps={{ classes, disableUnderline: true }} {...props} />;\r\n}\r\n\r\nexport default function TextFields(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n\r\n            <RedditTextField\r\n                label=\"Wallet\"\r\n                className={classes.margin}\r\n                defaultValue=\"Axis\"\r\n                variant=\"filled\"\r\n                id=\"reddit-input\"\r\n            />\r\n\r\n            <RedditTextField\r\n                label=\"Amount\"\r\n                className={classes.margin}\r\n                defaultValue=\"0\"\r\n                variant=\"filled\"\r\n                id=\"reddit-input\"\r\n            />\r\n\r\n            <RedditTextField\r\n                label=\"Amount\"\r\n                className={classes.margin}\r\n                defaultValue=\"0\"\r\n                variant=\"filled\"\r\n                id=\"reddit-input\"\r\n            />\r\n\r\n            <RedditTextField\r\n                label=\"Amount\"\r\n                className={classes.margin}\r\n                defaultValue=\"0\"\r\n                variant=\"filled\"\r\n                id=\"reddit-input\"\r\n            />\r\n\r\n            <RedditTextField\r\n                label=\"Amount\"\r\n                className={classes.margin}\r\n                defaultValue=\"0\"\r\n                variant=\"filled\"\r\n                id=\"reddit-input\"\r\n            />\r\n\r\n        </form>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport MaterialUIPickers from './DatePicker';\r\nimport TextFields from './TextBox';\r\nimport './Dialog.css'\r\nconst useStyles = makeStyles(theme => ({\r\n    form: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        margin: 'auto',\r\n        width: 'fit-content',\r\n    },\r\n    formControl: {\r\n        marginTop: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    formControlLabel: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport default function MaxWidthDialog() {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [fullWidth, setFullWidth] = React.useState(true);\r\n    const [maxWidth, setMaxWidth] = React.useState('md');\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleMaxWidthChange = event => {\r\n        setMaxWidth(event.target.value);\r\n    };\r\n\r\n    const handleFullWidthChange = event => {\r\n        setFullWidth(event.target.checked);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n                Open max-width dialog\r\n      </Button>\r\n            <Dialog\r\n                maxWidth={maxWidth}\r\n                fullWidth={fullWidth}\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"max-width-dialog-title\">\r\n                <DialogTitle id=\"max-width-dialog-title\">Add Transaction</DialogTitle>\r\n                <DialogContent>\r\n\r\n                    <MaterialUIPickers />\r\n                    <TextFields type=\"Amount\" />\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Close\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React, { Component } from 'react'\r\nimport './PaperCard.css'\r\nimport TransactionItem from '../Transaction/TransactionItem'\r\nimport TransactionHeader from '../Transaction/TransactionHeader/TransactionHeader'\r\nimport MaterialUIPickers from '../Transaction/Components/DatePicker'\r\n\r\nimport MaxWidthDialog from '../Transaction/Components/DialogBox'\r\nexport default class PaperCard extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"box shadow\">\r\n                {/* <TransactionHeader />\r\n                <TransactionItem /> */}\r\n\r\n                <MaxWidthDialog />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport ListIcon from '@material-ui/icons/List';\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 500,\r\n    },\r\n});\r\n\r\nexport default function Botttom() {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState('recents');\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <BottomNavigation value={value} onChange={handleChange} className={classes.root}>\r\n            <BottomNavigationAction label=\"Transactions\" value=\"recents\" icon={<ListIcon />} />\r\n            <BottomNavigationAction label=\"Stats\" value=\"favorites\" icon={<EqualizerIcon />} />\r\n            <BottomNavigationAction label=\"Accounts\" value=\"nearby\" icon={<AccountBalanceIcon />} />\r\n            <BottomNavigationAction label=\"Settings\" value=\"folder\" icon={<SettingsIcon />} />\r\n        </BottomNavigation>\r\n    );\r\n}","import React, { Component } from 'react'\r\nimport './Footer.css'\r\nimport IconButtons from '../Icon-button/Add/Add';\r\nimport VariantAvatars from '../Icon-button/Avatar/Avatar';\r\nimport LogoAvatar from '../Icon-button/LogoAvatar/LogoAvatar';\r\nimport Botttom from './Bottom/Bottom';\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"footer\">\r\n                    <Botttom />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Header from './components/header/Header';\nimport PaperCard from './components/Paper/PaperCard';\nimport Footer from './components/Footer/Footer';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <PaperCard />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}